import { Currency, SetStepsInErrorPayload, Urgency } from "../../../types";
import { RepairCategory } from "../../dashboard/types";
import { PartsNeeded, RequiredRepairs } from "../types";

type CreateRepairTicketState = {
  customerId: string;

  // part information
  partName: string;
  isValidPartName: boolean;
  isPartNameFocused: boolean;

  partSerialId: string;
  isValidPartSerialId: boolean;
  isPartSerialIdFocused: boolean;

  dateReceived: string;
  isValidDateReceived: boolean;
  isDateReceivedFocused: boolean;

  descriptionOfIssue: string;
  isValidDescriptionOfIssue: boolean;
  isDescriptionOfIssueFocused: boolean;

  initialInspectionNotes: string;
  isValidInitialInspectionNotes: boolean;
  isInitialInspectionNotesFocused: boolean;

  // repair information
  repairCategory: RepairCategory;
  requiredRepairs: RequiredRepairs[];
  partsNeeded: PartsNeeded[];
  partsNeededModels: string;
  isValidPartsNeededModels: boolean;
  isPartsNeededModelsFocused: boolean;

  partUnderWarranty: boolean;
  estimatedRepairCost: string;
  estimatedRepairCostCurrency: Currency;
  isValidEstimatedRepairCost: boolean;
  isEstimatedRepairCostFocused: boolean;

  estimatedCompletionDate: string;
  isValidEstimatedCompletionDate: boolean;
  isEstimatedCompletionDateFocused: boolean;

  repairPriority: Urgency;

  // work order id is generated by the system
  // rest of the information is updated by the repair technician after the initial repair note is created

  triggerFormSubmit: boolean;
  currentStepperPosition: number;
  stepsInError: Set<number>;

  isSubmitting: boolean;
  submitMessage: string;
  isSuccessful: boolean;
  successMessage: string;
  isLoading: boolean;
  loadingMessage: string;
};

type CreateRepairTicketAction = {
  setCustomerId: "setCustomerId";
  // part information
  setPartName: "setPartName";
  setIsValidPartName: "setIsValidPartName";
  setIsPartNameFocused: "setIsPartNameFocused";

  setPartSerialId: "setPartSerialId";
  setIsValidPartSerialId: "setIsValidPartSerialId";
  setIsPartSerialIdFocused: "setIsPartSerialIdFocused";

  setDateReceived: "setDateReceived";
  setIsValidDateReceived: "setIsValidDateReceived";
  setIsDateReceivedFocused: "setIsDateReceivedFocused";

  setDescriptionOfIssue: "setDescriptionOfIssue";
  setIsValidDescriptionOfIssue: "setIsValidDescriptionOfIssue";
  setIsDescriptionOfIssueFocused: "setIsDescriptionOfIssueFocused";

  setInitialInspectionNotes: "setInitialInspectionNotes";
  setIsValidInitialInspectionNotes: "setIsValidInitialInspectionNotes";
  setIsInitialInspectionNotesFocused: "setIsInitialInspectionNotesFocused";

  // repair information
  setRepairCategory: "setRepairCategory";
  setRequiredRepairs: "setRequiredRepairs";
  setPartsNeeded: "setPartsNeeded";
  setPartsNeededModels: "setPartsNeededModels";
  setIsValidPartsNeededModels: "setIsValidPartsNeededModels";
  setIsPartsNeededModelsFocused: "setIsPartsNeededModelsFocused";

  setPartUnderWarranty: "setPartUnderWarranty";
  setEstimatedRepairCost: "setEstimatedRepairCost";
  setIsValidEstimatedRepairCost: "setIsValidEstimatedRepairCost";
  setIsEstimatedRepairCostFocused: "setIsEstimatedRepairCostFocused";

  setEstimatedRepairCostCurrency: "setEstimatedRepairCostCurrency";
  setEstimatedCompletionDate: "setEstimatedCompletionDate";
  setIsValidEstimatedCompletionDate: "setIsValidEstimatedCompletionDate";
  setIsEstimatedCompletionDateFocused: "setIsEstimatedCompletionDateFocused";

  setRepairPriority: "setRepairPriority";

  setTriggerFormSubmit: "setTriggerFormSubmit";
  setCurrentStepperPosition: "setCurrentStepperPosition";
  setStepsInError: "setStepsInError";

  setIsSubmitting: "setIsSubmitting";
  setSubmitMessage: "setSubmitMessage";
  setIsSuccessful: "setIsSuccessful";
  setSuccessMessage: "setSuccessMessage";
  setIsLoading: "setIsLoading";
  setLoadingMessage: "setLoadingMessage";
};

type CreateRepairTicketDispatch =
  | {
      // all string payloads
      type:
        | CreateRepairTicketAction["setCustomerId"]
        | CreateRepairTicketAction["setPartName"]
        | CreateRepairTicketAction["setPartSerialId"]
        | CreateRepairTicketAction["setDateReceived"]
        | CreateRepairTicketAction["setDescriptionOfIssue"]
        | CreateRepairTicketAction["setInitialInspectionNotes"]
        | CreateRepairTicketAction["setPartsNeededModels"]
        | CreateRepairTicketAction["setEstimatedRepairCost"]
        | CreateRepairTicketAction["setEstimatedCompletionDate"]
        | CreateRepairTicketAction["setSubmitMessage"]
        | CreateRepairTicketAction["setSuccessMessage"]
        | CreateRepairTicketAction["setLoadingMessage"];

      payload: string;
    }
  | {
      // all RepairCategory payloads
      type: CreateRepairTicketAction["setRepairCategory"];
      payload: RepairCategory;
    }
  // all boolean payloads
  | {
      type:
        | CreateRepairTicketAction["setIsValidPartName"]
        | CreateRepairTicketAction["setIsPartNameFocused"]
        | CreateRepairTicketAction["setIsValidPartSerialId"]
        | CreateRepairTicketAction["setIsPartSerialIdFocused"]
        | CreateRepairTicketAction["setIsValidDateReceived"]
        | CreateRepairTicketAction["setIsDateReceivedFocused"]
        | CreateRepairTicketAction["setIsValidDescriptionOfIssue"]
        | CreateRepairTicketAction["setIsDescriptionOfIssueFocused"]
        | CreateRepairTicketAction["setIsValidInitialInspectionNotes"]
        | CreateRepairTicketAction["setIsInitialInspectionNotesFocused"]
        | CreateRepairTicketAction["setIsValidPartsNeededModels"]
        | CreateRepairTicketAction["setIsPartsNeededModelsFocused"]
        | CreateRepairTicketAction["setPartUnderWarranty"]
        | CreateRepairTicketAction["setIsValidEstimatedRepairCost"]
        | CreateRepairTicketAction["setIsEstimatedRepairCostFocused"]
        | CreateRepairTicketAction["setIsValidEstimatedCompletionDate"]
        | CreateRepairTicketAction["setIsEstimatedCompletionDateFocused"]
        | CreateRepairTicketAction["setTriggerFormSubmit"]
        | CreateRepairTicketAction["setIsSubmitting"]
        | CreateRepairTicketAction["setIsSuccessful"]
        | CreateRepairTicketAction["setIsLoading"];

      payload: boolean;
    }
  | {
      // all Urgency payloads
      type: CreateRepairTicketAction["setRepairPriority"];
      payload: Urgency;
    }
  | {
      // all RequiredRepairs payloads
      type: CreateRepairTicketAction["setRequiredRepairs"];
      payload: RequiredRepairs[];
    }
  | {
      // all PartsNeeded payloads
      type: CreateRepairTicketAction["setPartsNeeded"];
      payload: PartsNeeded[];
    }
  | {
      // all number payloads
      type: CreateRepairTicketAction["setCurrentStepperPosition"];
      payload: number;
    }
  | {
      // all Set<number> payloads
      type: CreateRepairTicketAction["setStepsInError"];
      payload: SetStepsInErrorPayload;
    }
  | {
      // all Currency payloads
      type: CreateRepairTicketAction["setEstimatedRepairCostCurrency"];
      payload: Currency;
    };

type CreateRepairTicketReducer = (
  state: CreateRepairTicketState,
  action: CreateRepairTicketDispatch
) => CreateRepairTicketState;

export type {
  CreateRepairTicketAction,
  CreateRepairTicketDispatch,
  CreateRepairTicketReducer,
  CreateRepairTicketState,
};
