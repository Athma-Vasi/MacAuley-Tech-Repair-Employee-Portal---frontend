import { Currency, Urgency } from "../../types";
import { RepairCategory } from "../dashboard/types";

type RequiredRepairs =
  | "Cleaning"
  | "Component replacement"
  | "Soldering"
  | "Testing"
  | "Calibration"
  | "Software update"
  | "Diagnostic evaluation"
  | "Internal inspection"
  | "External housing"
  | "Data recovery"
  | "Other";

type PartsNeeded =
  | "CPU"
  | "GPU"
  | "Motherboard"
  | "RAM"
  | "Storage"
  | "PSU"
  | "Cooling"
  | "Connectors"
  | "Software"
  | "Other";

type RepairStatus =
  | "In progress"
  | "Waiting for parts"
  | "Awaiting approval"
  | "Completed"
  | "Cancelled";

type RepairTicketSchema = {
  userId: string;
  username: string;
  customerId: string;

  /** initial repair note state when item was brought in */

  // part information
  partName: string;
  partSerialId: string;
  dateReceived: string;
  descriptionOfIssue: string;
  initialInspectionNotes: string;

  // repair information
  repairCategory: RepairCategory;
  requiredRepairs: RequiredRepairs[];
  partsNeeded: PartsNeeded[];
  partsNeededModels: string;
  partUnderWarranty: boolean;
  estimatedRepairCostCurrency: Currency;
  estimatedRepairCost: string;
  estimatedCompletionDate: string;
  repairPriority: Urgency;
  workOrderId: string; // generated by the server

  /** ongoing and final (updated) repair note state */
  repairTickets: string;
  testingResults: string;
  finalRepairCost: string;
  finalRepairCostCurrency: Currency;
  repairStatus: RepairStatus;
};

type RepairTicketDocument = RepairTicketSchema & {
  _id: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

type RepairTicketInitialSchema = Omit<
  RepairTicketSchema,
  | "repairTickets"
  | "testingResults"
  | "finalRepairCost"
  | "repairStatus"
  | "finalRepairCostCurrency"
  | "workOrderId"
  | "userId"
  | "username"
>;

type RepairTicketFinalSchema = RepairTicketSchema;

type RepairTicketInitialDocument = RepairTicketInitialSchema & {
  _id: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

type RepairTicketFinalDocument = RepairTicketFinalSchema & {
  _id: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export type {
  PartsNeeded,
  RepairStatus,
  RepairTicketDocument,
  RepairTicketFinalDocument,
  RepairTicketFinalSchema,
  RepairTicketInitialDocument,
  RepairTicketInitialSchema,
  RepairTicketSchema,
  RequiredRepairs,
};
