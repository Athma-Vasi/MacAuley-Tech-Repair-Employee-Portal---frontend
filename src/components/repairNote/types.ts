import {
  Country,
  Currency,
  PostalCode,
  Province,
  StatesUS,
  Urgency,
} from '../../types';

type RequiredRepairs =
  | 'Cleaning'
  | 'Component replacement'
  | 'Soldering'
  | 'Testing'
  | 'Calibration'
  | 'Software update'
  | 'Diagnostic evaluation'
  | 'Internal inspection'
  | 'External housing'
  | 'Data recovery'
  | 'Other';

type PartsNeeded =
  | 'CPU'
  | 'GPU'
  | 'Motherboard'
  | 'RAM'
  | 'Storage'
  | 'PSU'
  | 'Cooling'
  | 'Connectors'
  | 'Software'
  | 'Other';

type RepairStatus =
  | 'In progress'
  | 'Waiting for parts'
  | 'Awaiting approval'
  | 'Completed'
  | 'Cancelled';

type RepairNoteSchema = {
  userId: string;
  username: string;

  /** initial repair note state when item was brought in */
  // part information
  partName: string;
  partSerialId: string;
  dateReceived: string;
  descriptionOfIssue: string;
  initialInspectionNotes: string;

  // customer information
  customerName: string;
  customerPhone: string;
  customerEmail: string;
  customerAddressLine: string;
  customerCity: string;
  customerState: StatesUS;
  customerProvince: Province;
  customerCountry: Country;
  customerPostalCode: PostalCode;

  // repair information
  requiredRepairs: RequiredRepairs[];
  partsNeeded: PartsNeeded[];
  partsNeededModels: string;
  partUnderWarranty: boolean;
  estimatedRepairCost: string;
  estimatedRepairCostCurrency: Currency;
  estimatedCompletionstring: string;
  repairPriority: Urgency;
  workOrderId: string; // generated by the system

  /** ongoing and final (updated) repair note state */
  repairNotes: string;
  testingResults: string;
  finalRepairCost: string;
  finalRepairCostCurrency: Currency;
  repairStatus: RepairStatus;
};

type RepairNoteDocument = RepairNoteSchema & {
  _id: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

type RepairNoteInitialSchema = Omit<
  RepairNoteSchema,
  | 'repairNotes'
  | 'testingResults'
  | 'finalRepairCost'
  | 'repairStatus'
  | 'finalRepairCostCurrency'
>;

type RepairNoteFinalSchema = RepairNoteSchema;

type RepairNoteInitialDocument = RepairNoteInitialSchema & {
  _id: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

type RepairNoteFinalDocument = RepairNoteFinalSchema & {
  _id: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export type {
  PartsNeeded,
  RepairNoteDocument,
  RepairNoteFinalDocument,
  RepairNoteFinalSchema,
  RepairNoteInitialDocument,
  RepairNoteInitialSchema,
  RepairNoteSchema,
  RepairStatus,
  RequiredRepairs,
};
